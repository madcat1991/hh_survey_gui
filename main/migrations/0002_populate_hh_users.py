# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-19 12:28
from __future__ import unicode_literals

import random

from django.conf import settings
from django.db import migrations


def get_ug_data(ug_file_path):
    """ The function creates the index ug_id -> [uid1, uid2, ...].

    :param ug_file_path: a path to the file containing information about user clusters
    :return: ug_id -> [uid1, uid2, ...] dict
    """
    ug_to_uids = {}

    with open(ug_file_path) as f:
        # skipping
        while not next(f).startswith("Cluster"):
            pass

        cl_id = 0
        for line in f:
            if line.startswith("Users:"):
                ug_to_uids[cl_id] = [uid.strip() for uid in line.lstrip("Users:").split(",")]
            elif line.startswith("Cluster"):
                cl_id += 1
    return ug_to_uids


def populate_hh_users(apps, schema_editor):
    ug_to_uids = get_ug_data(settings.USER_CLUSTERS_JSON_PATH)

    random.seed(42)
    cluster_ids = random.sample(list(ug_to_uids.keys()), 200)

    model_class = apps.get_model('main', 'HHUser')
    for cl_id in cluster_ids:
        uid = random.choice(ug_to_uids[cl_id])
        user = model_class(code=uid, cluster_id=cl_id)
        user.save()


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_hh_users),
    ]
